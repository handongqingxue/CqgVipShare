<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.cqgVipShare.dao.VipMapper">
 	<select id="selectTrade" resultType="com.cqgVipShare.entity.Trade">
 		select * from trade where 1=1
 		<if test="name!=null">
 		  and name like'%${name}%'
 		</if>
 	</select>
 	<select id="selectVipList" resultType="com.cqgVipShare.entity.ShareVip">
 		select * from(
	 		select s.id,s.name,s.openId,s.consumeCount,s.shareMoney,s.describe,u.logo shopLogo,u.shopName,u.sumShareCount,u.tradeId,s.createTime,
	 		ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            40.0497810000 * PI() / 180 - latitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(40.0497810000 * PI() / 180) * COS(latitude * PI() / 180) * POW(
	                    SIN(
	                        (
	                            116.3424590000 * PI() / 180 - longitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
	        ) * 1000
	    	) AS distance from share_vip s left join user u on s.shopId=u.id where s.used=0
    	)t where 1=1
 		<if test="likeFlag==1">
 			and t.tradeId=#{tradeId}
 		</if>
 		<if test="likeFlag==2">
	 		<if test="start==-1&amp;end==100">
 				and distance&lt;=#{end}
 			</if>
	 		<if test="start==100&amp;end==500">
 				and distance between #{start} and #{end}
 			</if>
	 		<if test="start==500&amp;end==1000">
 				and distance between #{start} and #{end}
 			</if>
	 		<if test="start==1000&amp;end==-1">
 				and distance&gt;=#{start}
 			</if>
 		</if>
 		<if test="likeFlag==3">
	 		<if test="start==-1&amp;end==100">
 				and t.sumShareCount&lt;=#{end}
 			</if>
	 		<if test="start==100&amp;end==500">
 				and t.sumShareCount between #{start} and #{end}
 			</if>
	 		<if test="start==500&amp;end==1000">
 				and t.sumShareCount between #{start} and #{end}
 			</if>
	 		<if test="start==1000&amp;end==-1">
 				and t.sumShareCount&gt;=#{start}
 			</if>
 		</if>
 		<if test="orderFlag==1">
	 		<if test="tradeId!=null&amp;tradeId!=''">
	 		  and t.tradeId=#{tradeId}
	 		</if>
	 		order by t.createTime desc,t.sumShareCount desc
 		</if>
 		<if test="orderFlag==2">
 			order by distance 
 			<if test="order=='asc'">
 				asc
 			</if>
 			<if test="order=='desc'">
 				desc
 			</if>
 		</if>
 		<if test="orderFlag==3">
 			order by t.sumShareCount 
 			<if test="order=='asc'">
 				asc
 			</if>
 			<if test="order=='desc'">
 				desc
 			</if>
 		</if>
 	</select>
 	<select id="selectVipById" resultType="com.cqgVipShare.entity.ShareVip">
 		select * from share_vip where id=#{id}
 	</select>
 	<select id="selectLeaseVipById" resultType="com.cqgVipShare.entity.LeaseVip">
 		select * from lease_vip where id=#{id}
 	</select>
 	<select id="getVipConsumeCountById" resultType="java.lang.Integer">
 		select consumeCount from share_vip where id=#{id}
 	</select>
 	<select id="getShopInfoById" resultType="com.cqgVipShare.entity.User">
 		select * from user where userType=2 and id=#{shopId}
 	</select>
 	<select id="getUserInfoByOpenId" resultType="com.cqgVipShare.entity.User">
 		select * from user where openId=#{openId}
 	</select>
 	<select id="getShareRecordByUuid" resultType="com.cqgVipShare.entity.ShareRecord">
 		select * from share_record where uuid=#{uuid}
 	</select>
 	<select id="selectWXFShareListByKzOpenId" resultType="com.cqgVipShare.entity.ShareVip">
 		select s.id,s.name,s.openId,s.consumeCount,s.shareMoney,s.describe,s.yxzCount,s.yxfCount,s.qxsqCount,u.logo shopLogo,u.shopName from share_vip s left join user u on s.shopId=u.id where s.openId=#{openId}
 	</select>
 	<select id="selectYXFShareListByKzOpenId" resultType="com.cqgVipShare.entity.ShareVip">
 		select s.id,s.name,s.openId,s.consumeCount,s.shareMoney,s.describe,s.yxfCount,u.logo shopLogo,u.shopName from share_vip s left join user u on s.shopId=u.id where s.openId=#{openId}
 	</select>
 	<select id="selectMyCancelSRList" resultType="com.cqgVipShare.entity.CapitalFlowRecord">
 		select s.id,s.name vipName,s.shareMoney,s.describe,md.logo shopLogo,md.shopName,fxz.nickName fxzNickName from share_vip s,user md,capital_flow_record c,user fxz where s.shopId=md.id and s.id=c.vipId and c.fxzOpenId=fxz.openId and c.kzOpenId='abc'
 	</select>
 	<select id="selectAllShareListByFxzOpenId" resultType="com.cqgVipShare.entity.ShareRecord">
 		(select r.uuid,v.name vipName,r.shareMoney,r.ygxfDate,md.shopName,md.logo shopLogo from share_record r left join share_vip v on r.vipId=v.id left join `user` md on v.shopId=md.id where r.fxzOpenId=#{fxzOpenId})
 		union
 		(select r.uuid,v.name vipName,r.shareMoney,r.ygxfDate,md.shopName,md.logo shopLogo from share_history_record r,capital_flow_record c,share_vip v,`user` md where r.vipId=v.id and v.shopId=md.id and r.fxzOpenId=#{fxzOpenId} and c.srUuid=r.uuid)
 	</select>
 	<select id="selectDXFShareListByFxzOpenId" resultType="com.cqgVipShare.entity.ShareRecord">
 		select r.uuid,v.name vipName,r.shareMoney,r.ygxfDate,md.shopName,md.logo shopLogo from share_record r left join share_vip v on r.vipId=v.id left join `user` md on v.shopId=md.id where r.fxzOpenId=#{fxzOpenId} 
 	</select>
 	<select id="selectYXFShareListByFxzOpenId" resultType="com.cqgVipShare.entity.ShareRecord">
 		select r.uuid,v.name vipName,r.shareMoney,r.ygxfDate,md.shopName,md.logo shopLogo from share_history_record r,capital_flow_record c,share_vip v,`user` md where r.vipId=v.id and v.shopId=md.id and r.fxzOpenId=#{fxzOpenId} and c.srUuid=r.uuid and c.state=1
 	</select>
 	<select id="selectYQXShareListByFxzOpenId" resultType="com.cqgVipShare.entity.ShareRecord">
 		select r.uuid,v.name vipName,r.shareMoney,r.ygxfDate,md.shopName,md.logo shopLogo from share_history_record r,capital_flow_record c,share_vip v,`user` md where r.vipId=v.id and v.shopId=md.id and r.fxzOpenId=#{fxzOpenId} and c.srUuid=r.uuid and c.state=2
 	</select>
 	<select id="selectLeaseListByFxzOpenId" resultType="com.cqgVipShare.entity.LeaseRecord">
 		select r.id,v.name vipName,v.shareMoney,md.shopName,md.logo shopLogo from lease_vip v left join lease_record r on v.id=r.vipId left join `user` md on v.shopId=md.id where r.zlzOpenId=#{zlzOpenId} 
 	</select>
 	<select id="selectKzSRListByVipId" resultType="com.cqgVipShare.entity.ShareRecord">
 		select r.phone,u.nickName fxzNickName from share_record r,`user` u where r.kzOpenId=u.openId and vipId=#{vipId} and kzOpenId=#{kzOpenId}
 	</select>
 	<select id="selectKzSHRListByVipId" resultType="com.cqgVipShare.entity.ShareHistoryRecord">
 		select r.phone,u.nickName fxzNickName from share_history_record r,`user` u where r.kzOpenId=u.openId and vipId=#{vipId} and kzOpenId=#{kzOpenId}
 	</select>
 	<select id="getSRDetailByUuid" resultType="com.cqgVipShare.entity.ShareRecord">
 		select v.`no` vipNo,v.name vipName,v.phone kzPhone,r.phone,r.shareMoney,r.ygxfDate,r.qrcodeUrl,md.shopName,md.shopAddress,md.logo shopLogo from share_record r left join share_vip v on r.vipId=v.id left join `user` md on v.shopId=md.id where r.uuid=#{uuid}
 	</select>
 	<select id="getLRDetailById" resultType="com.cqgVipShare.entity.LeaseRecord">
 		select v.`no` vipNo,v.name vipName,v.shareMoney,md.shopName,md.shopAddress,md.logo shopLogo from lease_record r left join lease_vip v on r.vipId=v.id left join `user` md on v.shopId=md.id where r.id=#{id}
 	</select>
 	<select id="getUserInfoById" resultType="com.cqgVipShare.entity.User">
 		select * from user where id=#{id}
 	</select>
 	<select id="getUserCountByOpenId" resultType="java.lang.Integer">
 		select count(*) from user where openId=#{openId}
 	</select>
 	<select id="getUserByOpenId" resultType="com.cqgVipShare.entity.User">
 		select * from user where openId=#{openId}
 	</select>
 	<select id="selectHotShopList" resultType="com.cqgVipShare.entity.User">
 		select id,shopName,shopAddress,logo from user where userType=2 and shopCheck=1
 		<if test="tradeId!=null">
 		  and tradeId=#{tradeId}
 		</if>
 		 order by visitCount desc limit 0,12
 	</select>
 	<select id="selectMoreShopList" resultType="com.cqgVipShare.entity.User">
 		select id,shopName,shopAddress,shopFPY,logo from user where userType=2 and shopCheck=1
 		<if test="tradeId!=null">
 		  and tradeId=#{tradeId}
 		</if>
 	</select>
 	<select id="getShopFPY" resultType="java.lang.String">
 		select firstPinYin(#{shopName})
 	</select>
 	<select id="selectShopCheckForInt" resultType="java.lang.Integer">
 		select count(*) from user where userType=1 and shopCheck='0'
 	</select>
 	<select id="selectShopCheckList" resultType="com.cqgVipShare.entity.User">
 		select * from user where userType=1 and shopCheck='0' limit #{start},#{rows}
 	</select>
 	<select id="selectCapFlowRecInt" resultType="java.lang.Integer">
 		select count(*) from
 		((select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)) t
 	</select>
 	<select id="selectCapFlowRecList" resultType="com.cqgVipShare.entity.CapitalFlowRecord">
 		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)
 	</select>
 	<select id="exportCapFlowRecList" resultType="com.cqgVipShare.entity.CapitalFlowRecord">
 		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)
 	</select>
 	<select id="selectLeaseVipList" resultType="com.cqgVipShare.entity.LeaseVip">
 		select * from(
	 		select l.id,l.name,l.openId,l.consumeCount,l.shareMoney,l.describe,u.logo shopLogo,u.shopName,u.sumShareCount,u.tradeId,l.createTime,
	 		ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            40.0497810000 * PI() / 180 - latitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(40.0497810000 * PI() / 180) * COS(latitude * PI() / 180) * POW(
	                    SIN(
	                        (
	                            116.3424590000 * PI() / 180 - longitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
	        ) * 1000
	    	) AS distance from lease_vip l left join user u on l.shopId=u.id
    	)t where 1=1 
    	<if test="likeFlag==1">
 			and t.tradeId=#{tradeId}
 		</if>
 		<if test="likeFlag==2">
	 		<if test="start==-1&amp;end==100">
 				and distance&lt;=#{end}
 			</if>
	 		<if test="start==100&amp;end==500">
 				and distance between #{start} and #{end}
 			</if>
	 		<if test="start==500&amp;end==1000">
 				and distance between #{start} and #{end}
 			</if>
	 		<if test="start==1000&amp;end==-1">
 				and distance&gt;=#{start}
 			</if>
 		</if>
 		<if test="likeFlag==3">
	 		<if test="start==-1&amp;end==100">
 				and t.sumShareCount&lt;=#{end}
 			</if>
	 		<if test="start==100&amp;end==500">
 				and t.sumShareCount between #{start} and #{end}
 			</if>
	 		<if test="start==500&amp;end==1000">
 				and t.sumShareCount between #{start} and #{end}
 			</if>
	 		<if test="start==1000&amp;end==-1">
 				and t.sumShareCount&gt;=#{start}
 			</if>
 		</if>
 		<if test="orderFlag==1">
	 		<if test="tradeId!=null&amp;tradeId!=''">
	 		  and t.tradeId=#{tradeId}
	 		</if>
	 		order by t.createTime desc,t.sumShareCount desc
 		</if>
 		<if test="orderFlag==2">
 			order by distance 
 			<if test="order=='asc'">
 				asc
 			</if>
 			<if test="order=='desc'">
 				desc
 			</if>
 		</if>
 		<if test="orderFlag==3">
 			order by t.sumShareCount 
 			<if test="order=='asc'">
 				asc
 			</if>
 			<if test="order=='desc'">
 				desc
 			</if>
 		</if>
 	</select>
 	<select id="selectLeaseVipListByOpenId" resultType="com.cqgVipShare.entity.LeaseVip">
 		select l.id,l.name,l.openId,l.consumeCount,l.shareMoney,l.describe,u.logo shopLogo,u.shopName from lease_vip l left join user u on l.shopId=u.id where l.openId=#{openId} order by l.createTime desc
 	</select>
 	<select id="selectTradeCCInt" resultType="java.lang.Integer">
 		select count(*) from trade
 	</select>
 	<select id="selectTradeCCList" resultType="com.cqgVipShare.entity.Trade">
 		select * from trade limit #{start},#{rows}
 	</select>
 	<insert id="addLeaseVip" parameterType="com.cqgVipShare.entity.LeaseVip">
 		insert into lease_vip
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				no,
 			</if>
 			<if test="name!=null">
 				name,
 			</if>
 			<if test="shopId!=null">
 				shopId,
 			</if>
 			<if test="openId!=null">
 				openId,
 			</if>
 			<if test="consumeCount!=null">
 				consumeCount,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="describe!=null">
 				`describe`,
 			</if>
 				createTime
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				#{no},
 			</if>
 			<if test="name!=null">
 				#{name},
 			</if>
 			<if test="shopId!=null">
 				#{shopId},
 			</if>
 			<if test="openId!=null">
 				#{openId},
 			</if>
 			<if test="consumeCount!=null">
 				#{consumeCount},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="describe!=null">
 				#{describe},
 			</if>
 				now()
 		</trim>
 	</insert>
 	<insert id="addLeaseRecord" parameterType="com.cqgVipShare.entity.LeaseRecord">
 		insert into lease_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="zlzOpenId!=null">
 				zlzOpenId,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 				createTime
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="zlzOpenId!=null">
 				#{zlzOpenId},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 				now()
 		</trim>
 	</insert>
 	<insert id="addUser" parameterType="com.cqgVipShare.entity.User">
 		insert into user
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="nickName!=null">
 				nickName,
 			</if>
 			<if test="headImgUrl!=null">
 				headImgUrl,
 			</if>
 				createTime,
 				reputation,
 				userType,
 			<if test="openId!=null">
 				openId,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="nickName!=null">
 				#{nickName},
 			</if>
 			<if test="headImgUrl!=null">
 				#{headImgUrl},
 			</if>
 				now(),
 				5,
 				1,
 			<if test="openId!=null">
 				#{openId},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addShareVip" parameterType="com.cqgVipShare.entity.ShareVip">
 		insert into share_vip
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				no,
 			</if>
 			<if test="name!=null">
 				name,
 			</if>
 			<if test="shopId!=null">
 				shopId,
 			</if>
 			<if test="openId!=null">
 				openId,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="consumeCount!=null">
 				consumeCount,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="describe!=null">
 				`describe`,
 			</if>
 				createTime,
 				used,
 				enable
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				#{no},
 			</if>
 			<if test="name!=null">
 				#{name},
 			</if>
 			<if test="shopId!=null">
 				#{shopId},
 			</if>
 			<if test="openId!=null">
 				#{openId},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="consumeCount!=null">
 				#{consumeCount},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="describe!=null">
 				#{describe},
 			</if>
 				now(),
 				0,
 				1
 		</trim>
 	</insert>
 	<insert id="addShareRecord" parameterType="com.cqgVipShare.entity.ShareRecord">
 		insert into share_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				uuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="ygxfDate!=null">
 				ygxfDate,
 			</if>
 			<if test="qrcodeUrl!=null">
 				qrcodeUrl,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				#{uuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="ygxfDate!=null">
 				#{ygxfDate},
 			</if>
 			<if test="qrcodeUrl!=null">
 				#{qrcodeUrl},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addShareHistoryRecord" parameterType="com.cqgVipShare.entity.ShareHistoryRecord">
 		insert into share_history_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				uuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="ygxfDate!=null">
 				ygxfDate,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				#{uuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="ygxfDate!=null">
 				#{ygxfDate},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addCapitalFlowRecord" parameterType="com.cqgVipShare.entity.CapitalFlowRecord">
 		insert into capital_flow_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="srUuid!=null">
 				srUuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 				createTime,
 				state,
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="srUuid!=null">
 				#{srUuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 				now(),
 				0,
 		</trim>
 	</insert>
 	<update id="updateVipConsumeCountById">
 		update share_vip set consumeCount=consumeCount-1 where id=#{id}
 	</update>
 	<update id="updateVipUsedById">
 		update share_vip set used=1 where id=#{id}
 	</update>
	<update id="editMerchant">
		update user set
		<trim suffixOverrides=",">
			<if test="shopName!=null">
				shopName=#{shopName},
			</if>
			<if test="shopAddress!=null">
				shopAddress=#{shopAddress},
			</if>
			<if test="shopFPY!=null">
				shopFPY=#{shopFPY},
			</if>
			<if test="logo!=null">
				logo=#{logo},
			</if>
			<if test="latitude!=null">
				latitude=#{latitude},
			</if>
			<if test="longitude!=null">
				longitude=#{longitude},
			</if>
				shopCheck='0'
		</trim>
		where openId=#{openId}
	</update>
	<update id="updateCapFlowStateBySrUuid">
		update capital_flow_record set 
		<if test="stateFlag==CapitalFlowRecord.YXF">
			state=1 
		</if>
		<if test="stateFlag==CapitalFlowRecord.YQX">
			state=2
		</if>
		where srUuid=#{uuid}
	</update>
	<update id="updateCCPercentById">
		update trade set ccPercent=#{ccPercent} where id=#{id}
	</update>
	<update id="checkShopById">
		update user set shopCheck='1',userType=2 where id=#{id}
	</update>
	<update id="updateSumShareByOpenId">
		update user set sumShareCount=sumShareCount+1,sumShareMoney=sumShareMoney+#{shareMoney} where openId=#{openId}
	</update>
	<delete id="deleteShareRecordByUuid">
		delete from share_record where uuid=#{uuid}
	</delete>
	<delete id="deleteLeaseVipByIds">
		delete from lease_vip where 1=1
		<foreach collection="list" item="id" open=" and cast(id as char) in(" separator="," close=")">
		#{id}
		</foreach>
	</delete>
 </mapper>