<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.cqgVipShare.dao.VipMapper">
 	<select id="selectTrade" resultType="com.cqgVipShare.entity.Trade">
 		select * from trade where 1=1
 		<if test="name!=null">
 		  and name like'%${name}%'
 		</if>
 	</select>
 	<select id="selectVipList" resultType="com.cqgVipShare.entity.ShareVip">
 		select s.id,s.name,s.openId,s.consumeCount,s.shareMoney,s.describe,u.logo shopLogo,u.shopName from share_vip s left join user u on s.shopId=u.id where s.used=0
 		<if test="tradeId!=null">
 		  and u.tradeId=#{tradeId}
 		</if>
 		order by s.createTime desc
 	</select>
 	<select id="selectVipById" resultType="com.cqgVipShare.entity.ShareVip">
 		select * from share_vip where id=#{id}
 	</select>
 	<select id="getVipConsumeCountById" resultType="java.lang.Integer">
 		select consumeCount from share_vip where id=#{id}
 	</select>
 	<select id="getShopInfoById" resultType="com.cqgVipShare.entity.User">
 		select * from user where userType=2 and id=#{shopId}
 	</select>
 	<select id="getUserInfoByOpenId" resultType="com.cqgVipShare.entity.User">
 		select * from user where openId=#{openId}
 	</select>
 	<select id="getShareRecordByUuid" resultType="com.cqgVipShare.entity.ShareRecord">
 		select * from share_record where uuid=#{uuid}
 	</select>
 	<select id="selectShareListByFxzOpenId" resultType="com.cqgVipShare.entity.ShareRecord">
 		select v.`no` vipNo,v.name vipName,v.phone kzPhone,r.phone,r.shareMoney,r.ygxfDate,r.qrcodeUrl,md.shopName,md.shopAddress,md.logo shopLogo from share_record r left join share_vip v on r.vipId=v.id left join `user` md on v.shopId=md.id where r.fxzOpenId=#{fxzOpenId} 
 	</select>
 	<select id="getUserInfoById" resultType="com.cqgVipShare.entity.User">
 		select * from user where id=#{id}
 	</select>
 	<select id="getUserCountByOpenId" resultType="java.lang.Integer">
 		select count(*) from user where openId=#{openId}
 	</select>
 	<select id="getUserByOpenId" resultType="com.cqgVipShare.entity.User">
 		select * from user where openId=#{openId}
 	</select>
 	<select id="selectHotShopList" resultType="com.cqgVipShare.entity.User">
 		select id,shopName,shopAddress from user where userType=2 and shopCheck=1 order by visitCount desc limit 0,12
 	</select>
 	<select id="selectMoreShopList" resultType="com.cqgVipShare.entity.User">
 		select id,shopName,shopAddress,shopFPY from user where userType=2 and shopCheck=1
 	</select>
 	<select id="getShopFPY" resultType="java.lang.String">
 		select firstPinYin(#{shopName})
 	</select>
 	<select id="selectShopCheckForInt" resultType="java.lang.Integer">
 		select count(*) from user where userType=1 and shopCheck='0'
 	</select>
 	<select id="selectShopCheckList" resultType="com.cqgVipShare.entity.User">
 		select * from user where userType=1 and shopCheck='0' limit #{start},#{rows}
 	</select>
 	<select id="selectCapFlowRecInt" resultType="java.lang.Integer">
 		select count(*) from
 		((select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)) t
 	</select>
 	<select id="selectCapFlowRecList" resultType="com.cqgVipShare.entity.CapitalFlowRecord">
 		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)
 	</select>
 	<select id="exportCapFlowRecList" resultType="com.cqgVipShare.entity.CapitalFlowRecord">
 		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress ,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=0)
		UNION
		(select uuid,c.vipId,sv.`no`,md.shopName,md.shopAddress,kz.nickName kzNickName,fxz.nickName fxzNickName,s.shareMoney,s.phone,ygxfDate,c.createTime,state from capital_flow_record c,share_history_record s,`user` kz,`user` fxz,share_vip sv,`user` md where c.srUuid=s.uuid and s.kzOpenId=kz.openId and s.fxzOpenId=fxz.openId and c.vipId=sv.id and sv.shopId=md.id and c.state=1)
 	</select>
 	<select id="selectLeaseList" resultType="com.cqgVipShare.entity.LeaseRelation">
 		select l.id,u.nickName zkNickName,l.zkPhone from lease_relation l left join user u on l.zkOpenId=u.openId
 	</select>
 	<select id="selectTradeCCInt" resultType="java.lang.Integer">
 		select count(*) from trade
 	</select>
 	<select id="selectTradeCCList" resultType="com.cqgVipShare.entity.Trade">
 		select * from trade limit #{start},#{rows}
 	</select>
 	<insert id="addLeaseRelation" parameterType="com.cqgVipShare.entity.LeaseRelation">
 		insert into lease_relation
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="zkOpenId!=null">
 				zkOpenId,
 			</if>
 			<if test="zkPhone!=null">
 				zkPhone,
 			</if>
 				createTime
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="zkOpenId!=null">
 				#{zkOpenId},
 			</if>
 			<if test="zkPhone!=null">
 				#{zkPhone},
 			</if>
 				now()
 		</trim>
 	</insert>
 	<insert id="addUser" parameterType="com.cqgVipShare.entity.User">
 		insert into user
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="nickName!=null">
 				nickName,
 			</if>
 			<if test="headImgUrl!=null">
 				headImgUrl,
 			</if>
 				createTime,
 				reputation,
 				userType,
 			<if test="openId!=null">
 				openId,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="nickName!=null">
 				#{nickName},
 			</if>
 			<if test="headImgUrl!=null">
 				#{headImgUrl},
 			</if>
 				now(),
 				5,
 				1,
 			<if test="openId!=null">
 				#{openId},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addShareVip" parameterType="com.cqgVipShare.entity.ShareVip">
 		insert into share_vip
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				no,
 			</if>
 			<if test="name!=null">
 				name,
 			</if>
 			<if test="shopId!=null">
 				shopId,
 			</if>
 			<if test="openId!=null">
 				openId,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="consumeCount!=null">
 				consumeCount,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="describe!=null">
 				`describe`,
 			</if>
 				createTime,
 				used
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="no!=null">
 				#{no},
 			</if>
 			<if test="name!=null">
 				#{name},
 			</if>
 			<if test="shopId!=null">
 				#{shopId},
 			</if>
 			<if test="openId!=null">
 				#{openId},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="consumeCount!=null">
 				#{consumeCount},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="describe!=null">
 				#{describe},
 			</if>
 				now(),
 				0
 		</trim>
 	</insert>
 	<insert id="addShareRecord" parameterType="com.cqgVipShare.entity.ShareRecord">
 		insert into share_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				uuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="ygxfDate!=null">
 				ygxfDate,
 			</if>
 			<if test="qrcodeUrl!=null">
 				qrcodeUrl,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				#{uuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="ygxfDate!=null">
 				#{ygxfDate},
 			</if>
 			<if test="qrcodeUrl!=null">
 				#{qrcodeUrl},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addShareHistoryRecord" parameterType="com.cqgVipShare.entity.ShareHistoryRecord">
 		insert into share_history_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				uuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 			<if test="phone!=null">
 				phone,
 			</if>
 			<if test="ygxfDate!=null">
 				ygxfDate,
 			</if>
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="uuid!=null">
 				#{uuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 			<if test="phone!=null">
 				#{phone},
 			</if>
 			<if test="ygxfDate!=null">
 				#{ygxfDate},
 			</if>
 		</trim>
 	</insert>
 	<insert id="addCapitalFlowRecord" parameterType="com.cqgVipShare.entity.CapitalFlowRecord">
 		insert into capital_flow_record
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="srUuid!=null">
 				srUuid,
 			</if>
 			<if test="vipId!=null">
 				vipId,
 			</if>
 			<if test="kzOpenId!=null">
 				kzOpenId,
 			</if>
 			<if test="fxzOpenId!=null">
 				fxzOpenId,
 			</if>
 			<if test="shareMoney!=null">
 				shareMoney,
 			</if>
 				createTime,
 				state,
 		</trim>
 		values
 		<trim prefix="(" suffix=")" suffixOverrides=",">
 			<if test="srUuid!=null">
 				#{srUuid},
 			</if>
 			<if test="vipId!=null">
 				#{vipId},
 			</if>
 			<if test="kzOpenId!=null">
 				#{kzOpenId},
 			</if>
 			<if test="fxzOpenId!=null">
 				#{fxzOpenId},
 			</if>
 			<if test="shareMoney!=null">
 				#{shareMoney},
 			</if>
 				now(),
 				0,
 		</trim>
 	</insert>
 	<update id="updateVipConsumeCountById">
 		update share_vip set consumeCount=consumeCount-1 where id=#{id}
 	</update>
 	<update id="updateVipUsedById">
 		update share_vip set used=1 where id=#{id}
 	</update>
	<update id="editMerchant">
		update user set
		<trim suffixOverrides=",">
			<if test="shopName!=null">
				shopName=#{shopName},
			</if>
			<if test="shopAddress!=null">
				shopAddress=#{shopAddress},
			</if>
			<if test="shopFPY!=null">
				shopFPY=#{shopFPY},
			</if>
				shopCheck='0'
		</trim>
		where openId=#{openId}
	</update>
	<update id="updateCapFlowStateBySrUuid">
		update capital_flow_record set state=1 where srUuid=#{uuid}
	</update>
	<update id="updateCCPercentById">
		update trade set ccPercent=#{ccPercent} where id=#{id}
	</update>
	<delete id="deleteShareRecordByUuid">
		delete from share_record where uuid=#{uuid}
	</delete>
 </mapper>